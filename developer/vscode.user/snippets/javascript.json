{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"class define": {
		"prefix": "cls",
		"body": [
			"class ${1:className} {",
			"    constructor(${2:param}) {",
			"        $0",
			"    }",
			"}"
		],
		"description": "define a class"
	},

	"class method": {
		"prefix": "mec",
		"body": [
			"${1:methodName}(${2:param}) {",
			"    $0",
			"}"
		],
		"description": "method of class"
	},

	"object method": {
		"prefix": "meo",
		"body": [
			"${1:methodName}(${2:param}) {",
			"    $0",
			"},"
		],
		"description": "method of object"
	},

	"anonymous function in object": {
		"prefix": "afo",
		"body": [
			"function(${1:param}) {",
			"    $0",
			"},"
		],
		"description": "a function in object"
	},

	"anonymous function": {
		"prefix": "afn",
		"body": [
			"function(${1:param}) {",
			"    $0",
			"}"
		],
		"description": "a function in somewhere"
	},

	"for-of loop": {
		"prefix": "foo",
		"body": [
			"for ( const ${2:its} of ${1:list} ) {",
			"    $0",
			"}"
		],
		"description": "for-of loop statement"
	}
}